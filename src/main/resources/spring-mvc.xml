<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/jdbc
        http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
        http://www.springframework.org/schema/cache
        http://www.springframework.org/schema/cache/spring-cache-4.0.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">


    <!-- 扫描注解 -->
    <context:component-scan base-package="com.lxinet.jeesns">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
    </context:component-scan>
    <!--避免IE执行AJAX时，返回JSON出现下载文件 -->
    <bean id="mappingJacksonHttpMessageConverter"
          class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value>
            </list>
        </property>
    </bean>

    <!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="mappingJacksonHttpMessageConverter"/> <!-- JSON转换器 -->
            </list>
        </property>
    </bean>

    <!-- sss springmvc 1.1 spring的属性加载器，加载jeesns.properties文件中的属性 -->
    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location">
            <value>classpath:jeesns.properties</value>
        </property>
        <property name="fileEncoding" value="utf-8"/>
    </bean>

    <!-- sss freemarker 0.1 配置Freemarker核心配置文件的路径 -->
    <bean id="freemarkerConfiguration" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="location" value="classpath:freemarker.properties"/>
    </bean>

    <!--  sss freemarker 0.2 定义freemarker的默认配置 -->
    <bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="freemarkerSettings" ref="freemarkerConfiguration"/>
    <!--  sss freemarker 1. 定义freemarker的默认模板路径  配置freeMarker的模板路径 模式就是springmvc的前缀-->
        <property name="templateLoaderPath">
            <value>/WEB-INF/templates/default</value>
        </property>
        <property name="freemarkerVariables">
            <map>
                <entry key="xml_escape" value-ref="fmXmlEscape"/>
            </map>
        </property>
        <property name="defaultEncoding">
            <value>utf-8</value>
        </property>
    </bean>
    <bean id="fmXmlEscape" class="freemarker.template.utility.XmlEscape"/>
    <!-- sss freemarker 2. 配置前台输出的页面全部为freemarker  而不是jsp   配置freeMarker视图解析器 -->
    <bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.freemarker.FreeMarkerView"/>
        <property name="contentType" value="text/html; charset=utf-8"/>
        <!-- sss freemarker 3. 配置当前返回给前台页面的路径后缀名是  .ftl  也就是freemarker的默认扩展名 -->
        <property name="suffix" value=".ftl"/>
        <property name="order" value="0"/>
    </bean>

    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="utf-8"/>
        <!-- 文件大小最大值 -->
        <property name="maxUploadSize" value="10485760000"/>
        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="40960"/>
    </bean>

    <bean class="com.lxinet.jeesns.core.utils.SpringContextHolder" lazy-init="false"/>

    <mvc:annotation-driven/>
    
    <!-- sss springmvc 1.2 servlet在找页面时，走的是dispatcherServlet路线。找不到的时候会报404
                  加上这个默认的servlet时候，servlet在找不到的时候会去找静态的内容。  -->
    <mvc:default-servlet-handler/>
    
    <!-- sss springmvc 1.3 指定springmvc的静态资源,这样springmvc的dispatchServlet就不会去拦截  -->
    <mvc:resources location="/res/" mapping="/res/**"/>
    
    <mvc:interceptors>
        <!-- sss springmvc 1.4 使用bean定义一个(拦截器)Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求 -->
        <bean class="com.lxinet.jeesns.core.interceptor.InitInterceptor"/>
    </mvc:interceptors>
   
   <!-- sss springmvc 1.5.1  验证1  声明验证对象  -->
    <mvc:annotation-driven validator="validator"/>

   <!-- sss springmvc 1.5.2. 验证2  定义验证bean对象-->
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
   
   <!-- sss springmvc 1.5.3  验证3  配置springmvc的验证 默认调用的是hibernate的验证器 -->
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>
        <!-- 这里配置将使用上面国际化配置的messageSource -->
        <property name="validationMessageSource" ref="messageSource"/>
    </bean>
    
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
    <!-- 如果在国际化资源文件中找不到对应代码的信息，就用这个代码作为名称  -->  
        <property name="useCodeAsDefaultMessage" value="true"/>
    </bean>
</beans>